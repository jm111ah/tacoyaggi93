@{
    ViewBag.Title = "";
    Layout = "EIP_Layout";
}

<div class="row text-center" style="width:100%">
    <div style="width:50%; float:none; margin:0 auto">
        <br />
        <h4>  SDLC(Software Development Life Cycle) </h4>
        <br />
        <p>SDLC 한국말로 소프트웨어 생명주기라고 합니다.</p>
        <p>결론부터 말하면 시스템의 요구분석부터 유지보수까지 모든 과정을 모델화한 절차입니다.</p>
        <img src="~/images/SDLC.jpg" />
        <p>단계는 크게 <span>요구사항분석, 설계, 구현, 테스트, 유지보수</span> 5가지 입니다. </p>
        <br />
        <p>처음은 <span>유지보수</span> 단계 입니다.</p>
        <p>우리는 지금 외주를 받아서 프로그램을 만든다고 생각해봅시다.</p>
        <p>고객은 우리에게 기능들에 대해 요구사항이 있을 것이고, 우리는 요구사항에 대해 생각이나 회의를 진행할 것입니다.</p>
        <p>이를 요구사항 분석이라고 합니다. 말 그대로 요구에 대한 문제들을 분석하는 것입니다.</p>
        <p>요구사항의 장점은 문제들에 대해 미리 대비할 수 있다는 것 입니다.</p>
        <p>문제에 대해 대비할 수 있다는 것은 자원을 아낄 수 있는 것이고 이는 생산성 향상에 영향을 미칠겁니다.</p>
        <p>물론 모든 것을 대비할 수 는 없겠지만 요구사항분석 단계는 개발의 시작을 알리는 단계입니다.</p>
        <p>달리기 시합의 총소리와 같다고 할 수 있겠네요.</p>
        <br />
        <p>다음 단계는 <span>설계</span> 입니다.</p>
        <p>설계는 프로그램을 어떻게 만들 것인지를 구상하는 것 인데요.</p>
        <p>개인적으로 정말 중요하면서도 많은 경험과 기술이 필요한 단계인 것 같습니다.</p>
        <p>설계를 어떻게 하느냐에 따라 직진이냐 산으로 가느냐가 나뉘는 것 같거든요.</p>
        <p>자 다시 우리는 고객의 요구를 분석한 상태이고 우리팀의 리더는 어떻게 진행할지 생각을 합니다.</p>
        <p>고객이 요구한 것은 웹 홈페이지 였고 리더는 제작에 사용할 기술을 생각합니다.</p>
        <p>리더가 생각하는 기술은 대표적으로 DB, Server, FrameWork, Design Pattern 등등...</p>
        <p>저 같은 코더가 개발 할 수 있도록 뼈대를 구상하는 것 입니다. </p>
        <p>코딩이 운동이라면 설계는 운동장과 운동기계를 어떻게 만들까 고민하는 단계입니다.</p>
        <p>설계는 제작에 있어서 가장 중요한 부분이라고 할 수 있습니다.</p>
        <p>실제로 모든 분야에서 설계하시는 분들의 몸값이 가장 비쌉니다.</p>
        <p>자.. 설계가 완료되고 이제 홈페이지를 제작 해야 합니다.</p>
        <br />
        <p>제작하는 단계를 <span>구현</span>이라고 표현 합니다.</p>
        <p>구현은 말 그대로 설계를 기반으로 살을 붙히는 작업입니다. 설계가 뼈대라면 구현은 살이 됩니다.</p>
        <p>구현을 통해 살을 모두 붙혀 홈페이지를 만들었습니다.</p>
        <p>그럼 이제 에러가 없는지 확인해야 겠지요?</p>
        <br />
        <p>이 단계를 <span>테스트</span>라고 합니다.</p>
        <p>테스트를 통해 최종 운영에 배포할 것인지를 결정합니다.</p>
        <p>테스트가 없는 개발은 없으며, 개발이 햄버거라고 하면 테스트는 콜라라고 할 수 있겠네요.</p>
        <p>테스트에서 생각하지 못한 문제를 발견 및 수정 합니다.</p>
        <p>자 거의 다왔습니다.</p>
        <p>우리는 테스트를 통해 수정 및 보안해야할 부분을 모두 보안했고</p>
        <p>라이브 서버에 최종적으로 배포를 하였습니다.</p>
        <p>그런데 고객이 홈페이지에 어떤 부분을 수정해달라고 요청이 왔습니다.</p>
        <p>헛.. 라이브 서버에 배포하면 끝날 줄 알았는데, 이게 무슨 일인가?</p>
        <br />
        <p>이 단계를 <span>유지보수</span> 단계라고 합니다.</p>
        <p>소프트웨어 생명주기에 있어서 최종 단계입니다.</p>
        <p>유지보수 같은 경우, 계약 기간일 경우 유지보수를 제공해야합니다.</p>
        <p>계약기간이 아닐경우, 유료로 서비스를 제공할 수도 있습니다.</p>
        <p>우리는 고객과 유지보수 계약이 되어있었고 우리팀은 고객의 수정사항을 모두 처리하고 개발을 마무리 할 수 있었습니다.</p>
        <br />
        <p>생명주기에는 여러가지의 모델이 있습니다.</p>
        <p><span>폭포수, 프로토타이핑, 나선형</span> 모델이 있습니다.</p>
        <br />
        <p><span>폭포수 모델</span>은 개발 시 각 단계를 확실히 마무리 지은 후에 다음 단계로 넘어가는 모델 입니다.</p>
        <p>설계에서 구현으로 넘어갈 때, 설계 단계를 확실히 마무리 지은 후 넘어가는 것이죠.</p>
        <p>가장 오래된 모델이고, 고전적 생명주기 모형입니다.</p>
        <p>생명주기 모델 중 가장 오래된 고인물입니다.</p>
        <p>오래된 만큼 성공 사례가 많습니다.</p>
        <p>한단계씩 확실히 내려가므로 단계별 산출물이 명확합니다.</p>
        <p>단점으로는 요구사항 변경이 어렵습니다.</p>
        <p>설계에서 구현으로 내려왔는데 다시 올라가기가 어렵습니다.</p>
        <p>각 단계에 딱딱 맞게 내려왔기 때문에 변경하기가 어렵습니다.</p>
        <br />
        <p><span>프로토타이핑</span> 모델은 고객이 중요시 되는 모델입니다.</p>
        <p>고객의 피드백을 반영하여 개발을 진행합니다.</p>
        <p>요구사항 분석 단계와 유지보수 단계가 중점이 되는 모델 입니다.</p>
        <p>또한 고객에게 개발에 관련된 문서 등 공유가 활발히 이루어 집니다.</p>
        <p>고객의 입김이 강해서 평가 단계에서 다시 요구분석 초기단계로 보내 버릴 수도 있습니다.</p>
        <br />
        <p><span>나선형 모델</span>은 개발 시 위험을 최소화하기 위해 완벽한 시스템으로 개발해 나가는 모델 입니다.</p>
        <p>나선환 아시나요? 나선환은 계속 회전하는 형태를 취합니다.</p>
        <p>안전한 개발을 위해 계속 반복 회전하면서 개발을 진행하는 모델 입니다.</p>
        <p>마지막 단계까지 갔다가 다시 처음으로 올라오고 이를 계속 반복하는 모델 입니다.</p>
        <br />
        <br />


    </div>
</div>