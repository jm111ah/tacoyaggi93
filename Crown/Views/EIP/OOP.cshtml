@{
    ViewBag.Title = "";
    Layout = "EIP_Layout";
}

<div class="row text-center" style="width:100%">
    <div style="width:50%; float:none; margin:0 auto">
        <br />
        <h4>  OOP(Object Oriented Programming) </h4>
        <br />
        <p>OOP는 한국말로 객체 지향 프로그래밍 이라고 합니다.</p>
        <p>정말 많이 들어보았을 텐데, 한번 자세히 알아보도록 합시다.</p>
        <p>OOP를 알기 위해서는 객체(Object)에 대해서 알고 있어야 하는데요.</p>
        <p>프로그래밍에서 객체는 어떠한 속성값과 행동을 가지고 있는 데이터라고 말합니다.</p>
        <p>사실 객체라는 개념은 정말 어렵습니다.</p>
        <p>지금은 객체라는 것을 음식점이라고 생각합시다.</p>
        <p>A객체에서는 한식을 팔고 B객체에서는 일식을 판단고 가정하는 겁니다.</p>
        <p>우리는 각 음식점에서 음식(Data)을 받아서 먹는 행위를 할 것 입니다.</p>
        <p>음식점에서는 포장도 가능하고 매장안에서 식사도 가능합니다.</p>
        <p>이처럼 객체는 매장안에서 식사 , 포장 이라는 기능도 가지고 있고 우리는 객체를 빌려 먹는 행위를 합니다.</p>
        <p>대충 객체에 대해서 감이 오시나요..? 저는 아직도 잘 모르겠습니다.</p>
        <p>일단 OOP에 대해서 알아 보도록 하죠.</p>
        <p>객체 지향 프로그래밍은 각 객체를 조립해서 프로그래밍 하는 패턴 입니다.</p>
        <p>좀 더 효율적인 프로그래밍 방식이 필요하여 등장하게 되었습니다.</p>
        <p>객체 지향의 4가지 특징이 있는데요. 캡슐화, 추상화, 다형성, 상속성 입니다.</p>
        <p>먼저 추상화부터 알아보도록 하겠습니다.</p>
        <p>앞에서 A객체가 한식, B객체가 일식 이라고 말씀드렸는데요.</p>
        <p>추상화는 두 객체를 묶어 음식점이라고 가정하는 것을 추상화라고 합니다.</p>
        <p>즉, 공통의 속성이나 기능을 묶어 이름을 붙이는 것이죠.</p>
        <p>하나의 음식점이 생겼으므로, 이 식당 저 식당 찾아볼 필요가 줄었죠?</p>
        <p>우리는 추상화한 음식점에서 A식당, B식당을 방문하면 됩니다. </p>
        <p>복잡성이 낮아졌고 이는 생산성으로 직결됩니다. 추상화의 장점입니다.</p>
        <p>캡슐화는 일반적으로 연관 있는 변수와 함수를 클래스로 묶는 작업을 말합니다.</p>
        <p></p>
        <p></p>





        <p></p>



        <br />
        <br />


    </div>
</div>