@{
    ViewBag.Title = "";
}


<div class="row text-center" style="width:100%">
    <div style="width:50%; float:none; margin:0 auto">
        <br />
        <h4>  C# 소개 </h4>
        <br />
        <p>C# 은 MS에서 1999년 부터 개발에 착수하여 2000년에 발표한 <span>객체 지향 프로그래밍 언어</span>입니다.</p>
        <p>Visual Studio 와 호환성이 좋습니다. 필자도 VS IDE에 빠져 C#을 시작하게 되었습니다. 하하하...</p>
        <p>Java 보다 차세대 언어로 C++ 의 연산력 과 VB의 편의성을 결합해서 만든 최신 언어입니다.</p>
        <p><span>가비지 컬렉터(Garbage Collector)</span> 덕분에 메모리 걱정없이 프로그래밍을 할 수 있습니다. </p>
        <p>우리나라에서 Java에 비해 사용률이 많이 낮습니다. (공공기관에서 사용하는 전자 정부 프레임이 Java 기반이기 때문입니다...)</p>
        <p>C# 으로 개발할 수 있는 부분을 키워드로 말씀드리면 <span>GUI , 웹개발 , 게임개발 , 사물 인터넷</span> 이 있습니다.</p>
        <br />
        <br />
        <h4>  C# 종류 </h4>
        <br />
        <p>
            <span>GUI(Graphical User Interface)</span> : 사용자가 편리하게 사용할 수 있도록 입출력 기능을 알기 쉬운 아이콘 따위의 그래픽으로 나타낸 것입니다.
            대표적으로 <span>윈도폼(Windows Form)</span> , <span>WPF(Windows Presentation Foundation)</span> 있습니다.


            <span>윈도폼</span>은 C++ 사용한 윈도 개발을 C#으로 옮겨 놓은 형태로 개발자가 폼 디자이너를 이용해 도구 상자에서 버튼이나 콤보 박스 등의 컨트롤을 끌어다 그림을 그리듯이 GUI를 개발할 수 있습니다.
            컨트롤을 윈도에 배치할 때마다 폼 디자이너가 프로그램의 UI를 표시하면서 뒤로는 C# 코드를 자동으로 만들어줍니다.

            <span>WPF</span>는 MVC 패턴을 적용해 개발 생산성을 향상시킨 것으로 3D 그래픽까지 자체적으로 처리가능합니다.
        </p>
        <p>
            <span>웹개발</span> : C# 이 가장 대표적으로 사용되는 부분이며 개발자들의 치트키 스택오버플로우(Stack Overflow) 가 C# 으로 만든 대표적인 사이트 입니다. (찬양하소서...)
            필자도 C# 기반의 ASP.NET Core 를 사용하여 해당 사이트를 제작하고 있다 ㅎㅎ...
            2010년 이전만 하더라도 C# 웹개발은 추천하지 못하였습니다. 웹개발을 하려면 웹 서버를 실행해야 하는데 기존의 C#은 윈도우에서만 작동했기 때문입니다. (리눅스 공짜... 윈도우 비싸...)
            하지만 현재에 와서는 Core 2.0 버전에서 리눅스를 지원하고 Core 3.0 버전에서는 Mac 까지 지원하게 되면서 퍼포먼스 와 안정성을 가져갔다고 필자는 믿고 있습니다. ㅋㅋㅋ
            현실은 Java 기반의 Spring FrameWork 공급 및 수요가 훨~~씬 많습니다. (미래를 보고 Core 합시다!)
        </p>
        <p>
            <span>게임개발</span> : 일반적으로 게임 개발은 서버 , 클라이언트 개발 분야로 나뉩니다. 두 가지 모두 C++ 언어를 벗어나지 못했습니다. C++ 언어가 다른 언어보다 개발하는데 무겁고 까다롭다고 해도 C++ 의 속도를
            따라잡을 수 없었기 때문입니다. 하지만 C# 이 등장하고 C# 의 속도가 점점 빨라지면서 최근에는 C# 을 사용해 게임 서버 개발과 게임 클라이언트 개발 모두 활발하게 이루어지고 있습니다.
            왜냐면~~ <span>유니티(Unity)</span> 라는 강력한 엔진이 등장하면서 C# 게임개발에 막강한 영향을 미쳤습니다. 유니티는 C# 언어 기반이라 게임회사에 취직할 생각이신분들은 C# 을 꼭알고 가셔야 합니다. (C# 찬양...)
        </p>
        <p>
            <span>사물인터넷(Internet Of Things)</span> : 다양한 사물에 센서와 통신 기능을 내장하고 인터넷과 연결하는 기술입니다. 이를 활용하면 전구의 불을 스마트폰으로 조절하고 집 안에 사람이 없는지 확인하고 자동으로 절전 모드로 바꾸는 것 등 다양한 응용이 가능합니다.
            <span>라즈베리파이2</span> , <span>아두이노</span> 전용 윈10을 공개하여 회로 조작을 가능하도록 했습니다. 따라서 C# 을 사용하면 다양한 IOT 개발도 가능합니다.
        </p>
        <br />
        <br />
        <h4> 객체 지향 프로그래밍 언어 </h4>
        <br />
        <p><span>객체 지향 프로그래밍(Object Oriented Programming)</span> 줄여서 OOP는 프로그래밍 패러다임 중 하나입니다.</p>
        <p>각각의 객체는 메시지를 주고받고 데이터를 처리할 수 있습니다.</p>
        <p>객체 지향이 뭔가요? 라고 질문을 받았을 때, 5가지만 대답하도록 하자 ㅎㅎ... (필자도 객체지향이 뭔지 자세히 몰랐다.)</p>
        <p><span>클래스 + 인스턴스(객체) , 추상화 , 캡슐화 , 상속 , 다형성</span> 5가지만 기억하자</p>
        <p><span>클래스</span> : 집단에 속하는 속성(attribute) 행위(behavior)를 변수와 메서드로 정의한 것입니다.</p>
        <p><span>인스턴스(객체)</span> : 클래스에서 정의한 것을 토대로 실제 메모리상에 할당된 것입니다. (실제 프로그램에서 사용하는 데이터)</p>
        <p><span>추상화</span> : 불필요한 정보는 숨기고 중요한 정보만을 표현함으로써 공통의 속성이나 기능을 묶어 이름을 붙이는 것</p>
        <p><span>상속</span> : 부모클래스의 속성과 기능을 그대로 이어받아 사용할 수 있게하고 기능의 일부분을 변경해야 할 경우 상속받은 자식클래스에서 해당 기능만 다시 정의하여 사용하는 것 (다중상속은 불가합니다.)</p>
        <p><span>다형성</span> : 하나의 변수명 , 함수명 등이 상황에 따라 다른 의미로 해석되는 것 , 즉 <span>오버라이딩(Overriding)</span> , <span>오버로딩(OverLoading)</span>이 가능하다.</p>
        <p><span>캡슐화</span> : 클래스의 내부에서 데이터를 저장하는 비공개 변수 및 필드를 저장하여 외부에서 데이터를 제한적으로 사용하는 것 , 외부로 부터 내부를 감싸 숨기는 은닉화 개념을 포함하고 있습니다. </p>
        <p>객체 지향 실제로 열어보니 무슨말인지 모르겠죠? (저도 그렇습니다...) 지금은 객체지향에 5가지 키워드만 알아가도록 합시다.</p>
        <br />
        <br />
        <h4> 가비지 컬렉터 </h4>
        <br />
        <p>영어로는 <span>Garbage Collector</span> 라고 하며 <span>자동 메모리 청소기</span> 라고 생각하세요 ㅋㅋ</p>
        <p>사용하지 않는 객체를 찾아서 메모리를 자동으로 해제하는 기능입니다.</p>
        <p>new 키워드를 통해 객체를 생성하게 되면 메모리 영역에 객체가 할당됩니다.</p>
        <p>C , C++ 과 다르게 메모리 첫영역부터 차례대로 할당됩니다. 메모리 할당 가능 영역을 찾는 과정이 없기 때문에 속도가 빠릅니다.</p>
        <p>메모리가 계속 쌓이다 보면 특정 시점에 가비지 컬렉터 에 의해 사용하지 않는 메모리는 해제됩니다.</p>
        <p>가비지 컬렉터 가 작동하는 특정시점은 알 수 없고 그냥 우리는 자동으로 메모리를 정리해주는 기능이라고 기억합시다!</p>
        <br />
        <br />
        <h4> 정리 및 마무으리! </h4>
        <br />
        <p>1. C# 은 MS 가 만든 객체 지향 언어이다.</p>
        <p>2. C# 은 가비지컬렉터 기능이 있다.</p>
        <p>3. Java 언어에 비해 희소성이 있다...?</p>
        <p>4. GUI , 웹개발 , 게임개발 , 사물인터넷 개발 가능한 언어이다. (C# 을 할거라면 테크트리를 정하자!)</p>
        <p>5. 객체 지향 프로그래밍 언어에 대해 개념을 정리하자 (키워드만이라도 알아가도 충분쓰~)</p>
        <p>6. 가비지 컬렉터 = 자동 메모리 청소기 기억하자 ㅋㅋㅋ</p>
        <br />
        <br />

    </div>
</div>